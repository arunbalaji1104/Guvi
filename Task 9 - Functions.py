# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UQrkakh8kLjYxBckJewutCO7hhmntqFP

1.) What is the expected output of the following Python code given below:-
data = [10, 501, 22, 37, 100, 999, 87, 351]
result = filter (lambda x: x > 4, data)
print (list (result))


Original list: [10, 501, 22, 37, 100, 999, 87, 351]
Filtered list using the filter function with the lambda function lambda x: x > 4: [10, 501, 22, 37, 100, 999, 87, 351]
Conversion of the filtered result to a list using list(): [10, 501, 22, 37, 100, 999, 87, 351]

the output of the code will be: [10, 501, 22, 37, 100, 999, 87, 351]

2.2.) Write a Python code using Lambda function to check every element of a List is an
Integer or String?
"""

data = [10, 'hello', 5, 'world', 3.14]

check_type = lambda x: isinstance(x, (int, str))

result = all(map(check_type, data))

print(result)

"""
3.) Using the Python Lambda function create a Fibonacci series from 1 to 50 elements?"""

fibonacci = lambda n: n if n <= 1 else fibonacci(n-1) + fibonacci(n-2)

# Generate Fibonacci series from 1 to 50 elements
n = 50
fib_series = [fibonacci(i) for i in range(n)]

print(fib_series)

"""4.) Write a Python function to validate the Regular Expression for the following:-
a.) Email Address
b.) Mobile numbers of Bangladesh
c.) Telephone numbers of USA
d.) 16 character Alpha-Numeric password composed of alphabets of Upper Case,
Lower Case, Special Characters, Numbers.
"""

import re

def validate_regex(pattern, text):
    regex = re.compile(pattern)
    return bool(regex.match(text))

# a.) Validate Email Address
email_pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
email = 'example@email.com'
print('Email Address:', validate_regex(email_pattern, email))

# b.) Validate Mobile numbers of Bangladesh (assumed to be 11 digits)
bd_mobile_pattern = r'^\+?8801[1-9]\d{8}$'
bd_mobile = '+8801712345678'
print('Bangladesh Mobile Number:', validate_regex(bd_mobile_pattern, bd_mobile))

# c.) Validate Telephone numbers of USA (assumed to be 10 digits)
us_tel_pattern = r'^\(?([2-9][0-8][0-9])\)?[-. ]?([2-9][0-9]{2})[-. ]?([0-9]{4})$'
us_tel = '(123) 456-7890'
print('USA Telephone Number:', validate_regex(us_tel_pattern, us_tel))

# d.) Validate 16 character Alpha-Numeric password
password_pattern = r'^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{16}$'
password = 'Password123!@#qweR'
print('16 Character Alpha-Numeric Password:', validate_regex(password_pattern, password))